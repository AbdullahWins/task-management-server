services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-management-server
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
    # network_mode: host
    networks:
      - task-network

  mongodb:
    image: mongo:7.0.5
    container_name: mongodb-for-task-management
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - task-network

  redis:
    image: redis:7.2.4-alpine
    container_name: redis-for-task-management
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - task-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - app
    networks:
      - task-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - task-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local

networks:
  task-network:
    driver: bridge
